#usda 1.0
(
    customLayerData = {
        string creator = "Reality Composer Pro Version 2.0 (448.60.4)"
    }
    defaultPrim = "Root"
    metersPerUnit = 1
    upAxis = "Y"
)

def Xform "Root"
{
    reorder nameChildren = ["Box", "Maple_Plywood", "AnchorPortal"]
    def Xform "Box" (
        active = true
    )
    {
        reorder nameChildren = ["Cube_0", "Cube_1", "Cube_2", "Cube_3", "Base", "Top", "AnchorPortal_0", "AnchorPortal_1", "AnchorPortal_2", "AnchorPortal_3"]
        def Cube "Cube_1" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/Maple_Plywood> (
                bindMaterialAs = "weakerThanDescendants"
            )
            double size = 1
            float2 ui:nodegraph:node:pos = (32.36331, 471.47977)
            int ui:nodegraph:node:stackingOrder = 1
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (0.048, 1, 0.048)
            float3 xformOp:translate = (0.5, 0, -0.5)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Cube "Cube_2" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/Maple_Plywood> (
                bindMaterialAs = "weakerThanDescendants"
            )
            double size = 1
            float2 ui:nodegraph:node:pos = (32.36331, 471.47977)
            int ui:nodegraph:node:stackingOrder = 1
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (0.048, 1, 0.048)
            float3 xformOp:translate = (-0.5, 0, 0.5)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Cube "Cube_3" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/Maple_Plywood> (
                bindMaterialAs = "weakerThanDescendants"
            )
            double size = 1
            float2 ui:nodegraph:node:pos = (32.36331, 471.47977)
            int ui:nodegraph:node:stackingOrder = 1
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (0.048, 1, 0.048)
            float3 xformOp:translate = (-0.5, 0, -0.5)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Cube "Base" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/Maple_Plywood> (
                bindMaterialAs = "weakerThanDescendants"
            )
            double size = 1
            float2 ui:nodegraph:node:pos = (32.36331, 471.47977)
            int ui:nodegraph:node:stackingOrder = 1
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (1.048, 0.05, 1.048)
            float3 xformOp:translate = (0, -0.525, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Cube "Top" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/Maple_Plywood> (
                bindMaterialAs = "weakerThanDescendants"
            )
            double size = 1
            float2 ui:nodegraph:node:pos = (52.36331, 491.47977)
            int ui:nodegraph:node:stackingOrder = 2
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (1.048, 0.05, 1.048)
            float3 xformOp:translate = (0, 0.525, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Cube "Cube_0" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/Maple_Plywood> (
                bindMaterialAs = "weakerThanDescendants"
            )
            double size = 1
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (0.048, 1, 0.048)
            float3 xformOp:translate = (0.5, 0, 0.5)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Xform "AnchorPortal_0" (
            active = true
        )
        {
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (1, 1, 1)
            float3 xformOp:translate = (0, 0, -0.5)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Xform "AnchorPortal_1" (
            active = true
        )
        {
            float2 ui:nodegraph:node:pos = (32.36331, 471.47977)
            int ui:nodegraph:node:stackingOrder = 1
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (1, 1, 1)
            float3 xformOp:translate = (0, 0, 0.5)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Xform "AnchorPortal_2" (
            active = true
        )
        {
            float2 ui:nodegraph:node:pos = (32.36331, 471.47977)
            int ui:nodegraph:node:stackingOrder = 1
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (1, 1, 1)
            float3 xformOp:translate = (0.5, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Xform "AnchorPortal_3" (
            active = true
        )
        {
            float2 ui:nodegraph:node:pos = (32.36331, 471.47977)
            int ui:nodegraph:node:stackingOrder = 1
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (1, 1, 1)
            float3 xformOp:translate = (-0.5, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }
    }

    def "Maple_Plywood" (
        active = true
        references = @MaplePlywood.usdz@
    )
    {
        color3f inputs:Basecolor_Tint = (0.6958763, 0.46542677, 0.094637565) (
            colorSpace = "srgb_texture"
        )
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (0, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }
}

